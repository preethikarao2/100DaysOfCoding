Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

 

Example 1:
     1
  /  |  \
  2  |   2
 / \ |  / \
 3 4 |  4 3

Input: root = [1,2,2,3,4,4,3]
Output: true



class Solution {
    public boolean isSymmetric(TreeNode root) {
        return isSymmetricHelper(root.left,root.right);
    }
    public boolean isSymmetricHelper(TreeNode left, TreeNode right){
        if(left==null && right==null)
            return true;
        if(left!=null && right==null)
            return false;
        if(left==null && right!=null)
            return false;
        if(left.val!=right.val)
            return false;
        return isSymmetricHelper(left.left,right.right) && isSymmetricHelper(left.right,right.left);
    }
}
